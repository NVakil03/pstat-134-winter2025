groups <- seq(1:28)
groups
sample(groups)
anime <- read_csv("data/anime.csv")
head(anime)
summary(anime)
head(anime)
anime <- anime %>%
drop_na()
anime
anime %>% summary()
ratings <- read_csv("data/anime_rating.csv")
head(ratings)
ratings
ratings %>% summary()
ratings$rating %>% factor() %>% table()
ratings <- read_csv("data/anime_rating.csv") %>%
filter(rating >= 0)
head(ratings)
head(ratings)
left_join(anime, ratings)
right_join(anime, ratings, by = "anime_id")
anime_data <- right_join(anime, ratings, by = "anime_id")
summary(anime_data)
rating_counts <- as.data.frame(table(anime_data$anime_id))
colnames(rating_counts) <- c("anime_id", "count")
rating_counts$count <- as.integer(rating_counts$count)  # Ensure counts are integers
rating_counts
anime_data %>% count(anime_id)
anime_data %>% count(anime_id) %>%
arrange(desc(n))
rating_counts <- anime_data %>% count(anime_id) %>%
arrange(desc(n))
rating_counts
rating_counts %>% tail()
rating_counts %>% filter(n == 1)
rating_counts
rare_anime <- rating_counts %>% filter(n == 1) %>% select(anime_id)
rare_anime
anime_data %>%
filter(anime_id %in% rare_anime)
anime_data %>%
filter(anime_id %in% rare_anime$anime_id)
anime_data %>%
filter(! anime_id %in% rare_anime$anime_id)
anime_data
# we pivot wider, so that a user is a row, the columns are anime ID values,
# and values are user ratings of specific anime(s)
anime_data <- pivot_wider(anime_data, names_from = anime_id, values_from = rating.y, id_cols = user_id)
anime_data %>% head()
library(tidyverse)
library(tidymodels)
anime <- read_csv("data/anime.csv")
head(anime)
summary(anime)
# Drop any movies that are watched but not rated:
anime <- anime %>%
drop_na()
ratings <- read_csv("data/anime_rating.csv") %>%
filter(rating >= 0)
head(ratings)
# Merge the datasets by anime ID
anime_data <- right_join(anime, ratings, by = "anime_id")
summary(anime_data)
rating_counts <- anime_data %>% count(anime_id) %>%
arrange(desc(n))
rating_counts
rare_anime <- rating_counts %>% filter(n == 1) %>% select(anime_id)
# There are about 826 animes that only have one rating
# One rating is not very much information about them, so we'll drop them
# from the dataset. That will still leave over 9,000 animes and over 6,000,000 reviews.
anime_data <- anime_data %>%
filter(! anime_id %in% rare_anime$anime_id)
# TESTING:
anime_data <- anime_data[1:3000,]
# END TESTING
# we pivot wider, so that a user is a row, the columns are anime ID values,
# and values are user ratings of specific anime(s)
anime_data <- pivot_wider(anime_data,
names_from = anime_id,
values_from = rating.y, id_cols = user_id)
anime_data %>% head()
# We can then pull out the animes that were watched by any single user:
# Let's select a user ID at random:
random_user <- sample(1, anime_data$user_id)
anime_data %>% head()
library(tidyverse)
library(tidymodels)
anime <- read_csv("data/anime.csv")
head(anime)
summary(anime)
# Drop any movies that are watched but not rated:
anime <- anime %>%
drop_na()
ratings <- read_csv("data/anime_rating.csv") %>%
filter(rating >= 0)
head(ratings)
# Merge the datasets by anime ID
anime_data <- right_join(anime, ratings, by = "anime_id")
summary(anime_data)
rating_counts <- anime_data %>% count(anime_id) %>%
arrange(desc(n))
rating_counts
rare_anime <- rating_counts %>% filter(n == 1) %>% select(anime_id)
# There are about 826 animes that only have one rating
# One rating is not very much information about them, so we'll drop them
# from the dataset. That will still leave over 9,000 animes and over 6,000,000 reviews.
anime_data <- anime_data %>%
filter(! anime_id %in% rare_anime$anime_id)
# TESTING:
anime_data <- anime_data[1:3000,]
# END TESTING
# we pivot wider, so that a user is a row, the columns are anime ID values,
# and values are user ratings of specific anime(s)
anime_data <- pivot_wider(anime_data,
names_from = anime_id,
values_from = rating.y, id_cols = user_id,
values_fill = 0)
anime_data %>% head()
# We can then pull out the animes that were watched by any single user:
# Let's select a user ID at random:
random_user <- sample(1, anime_data$user_id)
anime_data %>% head()
ratings
library(tidyverse)
library(tidymodels)
anime <- read_csv("data/anime.csv")
head(anime)
summary(anime)
# Drop any movies that are watched but not rated:
anime <- anime %>%
drop_na()
ratings <- read_csv("data/anime_rating.csv") %>%
filter(rating >= 0) %>%
filter(user_id <= 5000)
head(ratings)
# Merge the datasets by anime ID
anime_data <- right_join(anime, ratings, by = "anime_id")
summary(anime_data)
rating_counts <- anime_data %>% count(anime_id) %>%
arrange(desc(n))
rating_counts
rare_anime <- rating_counts %>% filter(n == 1) %>% select(anime_id)
# There are about 826 animes that only have one rating
# One rating is not very much information about them, so we'll drop them
# from the dataset. That will still leave over 9,000 animes and over 6,000,000 reviews.
anime_data <- anime_data %>%
filter(! anime_id %in% rare_anime$anime_id)
# we pivot wider, so that a user is a row, the columns are anime ID values,
# and values are user ratings of specific anime(s)
anime_data <- pivot_wider(anime_data,
names_from = anime_id,
values_from = rating.y, id_cols = user_id,
values_fill = 0)
anime_data %>% head()
# We can then pull out the animes that were watched by any single user:
# Let's select a user ID at random:
random_user <- sample(1, anime_data$user_id)
anime_data %>% head()
anime_data
library(tidyverse)
library(tidymodels)
anime <- read_csv("data/anime.csv")
head(anime)
summary(anime)
# Drop any movies that are watched but not rated:
anime <- anime %>%
drop_na()
ratings <- read_csv("data/anime_rating.csv") %>%
filter(rating >= 0) %>%
filter(user_id <= 8000)
head(ratings)
# Merge the datasets by anime ID
anime_data <- right_join(anime, ratings, by = "anime_id")
summary(anime_data)
rating_counts <- anime_data %>% count(anime_id) %>%
arrange(desc(n))
rating_counts
rare_anime <- rating_counts %>% filter(n == 1) %>% select(anime_id)
# There are about 826 animes that only have one rating
# One rating is not very much information about them, so we'll drop them
# from the dataset. That will still leave over 9,000 animes and over 6,000,000 reviews.
anime_data <- anime_data %>%
filter(! anime_id %in% rare_anime$anime_id)
# we pivot wider, so that a user is a row, the columns are anime ID values,
# and values are user ratings of specific anime(s)
anime_data <- pivot_wider(anime_data,
names_from = anime_id,
values_from = rating.y, id_cols = user_id,
values_fill = 0)
anime_data %>% head()
# We can then pull out the animes that were watched by any single user:
# Let's select a user ID at random:
random_user <- sample(1, anime_data$user_id)
anime_data %>% head()
anime_data
library(tidyverse)
library(tidymodels)
anime <- read_csv("data/anime.csv")
head(anime)
summary(anime)
# Drop any movies that are watched but not rated:
anime <- anime %>%
drop_na()
ratings <- read_csv("data/anime_rating.csv") %>%
filter(rating >= 0) %>%
filter(user_id <= 9000)
head(ratings)
# Merge the datasets by anime ID
anime_data <- right_join(anime, ratings, by = "anime_id")
summary(anime_data)
rating_counts <- anime_data %>% count(anime_id) %>%
arrange(desc(n))
rating_counts
rare_anime <- rating_counts %>% filter(n == 1) %>% select(anime_id)
# There are about 826 animes that only have one rating
# One rating is not very much information about them, so we'll drop them
# from the dataset. That will still leave over 9,000 animes and over 6,000,000 reviews.
anime_data <- anime_data %>%
filter(! anime_id %in% rare_anime$anime_id)
# we pivot wider, so that a user is a row, the columns are anime ID values,
# and values are user ratings of specific anime(s)
anime_data <- pivot_wider(anime_data,
names_from = anime_id,
values_from = rating.y, id_cols = user_id,
values_fill = 0)
anime_data %>% head()
# We can then pull out the animes that were watched by any single user:
# Let's select a user ID at random:
random_user <- sample(1, anime_data$user_id)
anime_data
sample(1, anime_data$user_id)
sample(anime_data$user_id, 1)
sample(anime_data$user_id, 1)
sample(anime_data$user_id, 1)
# We can then pull out the animes that were watched by any single user:
# Let's select a user ID at random:
random_user <- sample(anime_data$user_id, 1)
print(random_user)
# And we can see what they watched:
anime_data %>%
filter(user_id == random_user)
# And we can see what they watched and how they rated it:
anime_data %>%
filter(user_id == random_user) %>%
subset(. != 0)
# And we can see what they watched and how they rated it:
anime_data %>%
filter(user_id == random_user) %>%
filter(!= 0)
# And we can see what they watched and how they rated it:
anime_data %>%
filter(user_id == random_user) %>%
filter(. != 0)
# And we can see what they watched and how they rated it:
anime_data %>%
filter(user_id == random_user) %>%
filter_all(!= 0)
# And we can see what they watched and how they rated it:
anime_data %>%
filter(user_id == random_user) %>%
filter_all(. != 0)
# And we can see what they watched and how they rated it:
anime_data %>%
filter(user_id == random_user) %>%
filter_all(all_vars() != 0)
# And we can see what they watched and how they rated it:
anime_data %>%
filter(user_id == random_user) %>%
filter_all(all_vars != 0)
?filter_a
?filter_all
# And we can see what they watched and how they rated it:
anime_data %>%
filter(user_id == random_user) %>%
filter_all(all_vars(. != 0))
# And we can see what they watched and how they rated it:
anime_data %>%
filter(user_id == random_user) %>%
filter(all_vars(. != 0))
# And we can see what they watched and how they rated it:
random_user_dat <- anime_data %>%
filter(user_id == random_user)
random_user_dat %>%
filter_all(all_vars(. != 0))
random_user_dat %>%
filter_all(all_vars(. != 0))
reticulate::repl_python()
# And we can see what they watched and how they rated it:
random_user_dat <- anime_data %>%
filter(user_id == random_user)
library(tidyverse)
library(tidymodels)
anime <- read_csv("data/anime.csv")
head(anime)
summary(anime)
# Drop any movies that are watched but not rated:
anime <- anime %>%
drop_na()
ratings <- read_csv("data/anime_rating.csv") %>%
filter(rating >= 0) %>%
filter(user_id <= 9000)
head(ratings)
# Merge the datasets by anime ID
anime_data <- right_join(anime, ratings, by = "anime_id")
summary(anime_data)
rating_counts <- anime_data %>% count(anime_id) %>%
arrange(desc(n))
rating_counts
rare_anime <- rating_counts %>% filter(n == 1) %>% select(anime_id)
# There are about 826 animes that only have one rating
# One rating is not very much information about them, so we'll drop them
# from the dataset. That will still leave over 9,000 animes and over 6,000,000 reviews.
anime_data <- anime_data %>%
filter(! anime_id %in% rare_anime$anime_id)
# we pivot wider, so that a user is a row, the columns are anime ID values,
# and values are user ratings of specific anime(s)
anime_data <- pivot_wider(anime_data,
names_from = anime_id,
values_from = rating.y, id_cols = user_id,
values_fill = 0)
anime_data %>% head()
reticulate::repl_python()
library(tidyverse)
library(tidymodels)
anime <- read_csv("data/anime.csv")
head(anime)
summary(anime)
# Drop any movies that are watched but not rated:
anime <- anime %>%
drop_na()
ratings <- read_csv("data/anime_rating.csv") %>%
filter(rating >= 0) %>%
filter(user_id <= 9000)
head(ratings)
# Merge the datasets by anime ID
anime_data <- right_join(anime, ratings, by = "anime_id")
summary(anime_data)
rating_counts <- anime_data %>% count(anime_id) %>%
arrange(desc(n))
rating_counts
rare_anime <- rating_counts %>% filter(n == 1) %>% select(anime_id)
# There are about 826 animes that only have one rating
# One rating is not very much information about them, so we'll drop them
# from the dataset. That will still leave over 9,000 animes and over 6,000,000 reviews.
anime_data <- anime_data %>%
filter(! anime_id %in% rare_anime$anime_id)
# we pivot wider, so that a user is a row, the columns are anime ID values,
# and values are user ratings of specific anime(s)
anime_data <- pivot_wider(anime_data,
names_from = anime_id,
values_from = rating.y, id_cols = user_id)
anime_data %>% head()
reticulate::repl_python()
library(tidyverse)
library(tidymodels)
anime <- read_csv("data/anime.csv")
head(anime)
summary(anime)
# Drop any movies that are watched but not rated:
anime <- anime %>%
drop_na()
ratings <- read_csv("data/anime_rating.csv") %>%
filter(rating >= 0)
head(ratings)
# There are a lot of users who have rated only once, even if they have rated 5 animes, it can't be considered as a valuable record for recommendation. So we will consider minimum 50 ratings by the user as a threshold value.
users_to_keep <- ratings %>% group_by(user_id, .add=TRUE) %>% summarise(n = n()) %>%
filter(n > 50) %>% select(user_id)
ratings <- ratings %>%
filter(user_id %in% users_to_keep$user_id)
# Merge the datasets by anime ID
anime_data <- right_join(anime, ratings, by = "anime_id")
summary(anime_data)
rating_counts <- anime_data %>% count(anime_id) %>%
arrange(desc(n))
rating_counts
rare_anime <- rating_counts %>% filter(n == 1) %>% select(anime_id)
# There are about 826 animes that only have one rating
# One rating is not very much information about them, so we'll drop them
# from the dataset. That will still leave over 9,000 animes and over 6,000,000 reviews.
anime_data <- anime_data %>%
filter(! anime_id %in% rare_anime$anime_id)
# we pivot wider, so that a user is a row, the columns are anime ID values,
# and values are user ratings of specific anime(s)
# anime_data <- pivot_wider(anime_data,
#                           names_from = anime_id,
#                           values_from = rating.y, id_cols = user_id)
anime_data <- anime_data %>% select(-c(genre, type, episodes, rating.x, members)) %>%
mutate(user_rating = rating.y) %>%
select(-rating.y)
anime_data
reticulate::repl_python()
library(tidyverse)
library(tidymodels)
anime <- read_csv("data/anime.csv")
head(anime)
summary(anime)
# Drop any movies that are watched but not rated:
anime <- anime %>%
drop_na()
ratings <- read_csv("data/anime_rating.csv") %>%
filter(rating >= 0)
head(ratings)
# There are a lot of users who have rated only once, even if they have rated 5 animes, it can't be considered as a valuable record for recommendation. So we will consider minimum 50 ratings by the user as a threshold value.
users_to_keep <- ratings %>% group_by(user_id, .add=TRUE) %>% summarise(n = n()) %>%
filter(n > 200) %>% select(user_id)
ratings <- ratings %>%
filter(user_id %in% users_to_keep$user_id)
# Merge the datasets by anime ID
anime_data <- right_join(anime, ratings, by = "anime_id")
summary(anime_data)
rating_counts <- anime_data %>% count(anime_id) %>%
arrange(desc(n))
rating_counts
rare_anime <- rating_counts %>% filter(n == 1) %>% select(anime_id)
# There are about 826 animes that only have one rating
# One rating is not very much information about them, so we'll drop them
# from the dataset. That will still leave over 9,000 animes and over 6,000,000 reviews.
anime_data <- anime_data %>%
filter(! anime_id %in% rare_anime$anime_id)
# we pivot wider, so that a user is a row, the columns are anime ID values,
# and values are user ratings of specific anime(s)
# anime_data <- pivot_wider(anime_data,
#                           names_from = anime_id,
#                           values_from = rating.y, id_cols = user_id)
anime_data <- anime_data %>% select(-c(genre, type, episodes, rating.x, members)) %>%
mutate(user_rating = rating.y) %>%
select(-rating.y)
reticulate::repl_python()
