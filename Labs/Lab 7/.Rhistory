across(.cols = everything())) %>%
mutate(age = case_when(
is.na(age) ~ age_median,
.default = age
)) %>%
select(-age_median)
titanic %>%
filter(is.na(embarked))
titanic <- titanic %>%
mutate(embarked = case_when(
is.na(embarked) ~ "S",
.default = embarked
))
titanic %>%
filter(is.na(cabin))
titanic <- titanic %>%
mutate(deck = case_when(
!is.na(cabin) ~ str_extract(cabin, "([A-Z]+)"),
is.na(cabin) ~ "M",
.default = NULL)) %>%
select(deck, everything())
titanic %>%
ggplot(aes(x = deck, fill = factor(pclass))) +
geom_bar(position = "fill")
titanic %>%
group_by(deck) %>%
count()
titanic <- titanic %>%
mutate(deck = case_when(
deck == "T" ~ "ABC",
deck == "A" | deck == "B" | deck == "C" ~ "ABC",
deck == "D" | deck == "E" ~ "DE",
deck == "F" | deck == "G" ~ "FG",
.default = deck)) %>%
select(-cabin)
titanic %>%
group_by(deck) %>%
count()
vis_miss(titanic)
titanic$embarked %>% is.na() %>%
mean()
titanic_split <- initial_split(titanic,
prop = 0.80,
strata = survived)
titanic_train <- training(titanic_split)
titanic_test <- testing(titanic_split)
reticulate::repl_python()
titanic_train %>%
ggplot(aes(x = fare, fill = survived)) +
geom_histogram(alpha = 0.3)
titanic_train %>%
ggplot(aes(x = fare, fill = survived)) +
geom_density(alpha = 0.3)
titanic_train <- titanic_train %>%
mutate(fare_binned = factor(ntile(fare,n=13)))
titanic_train %>%
ggplot(aes(x = fare_binned, fill = survived)) +
geom_bar(position = "fill")
titanic_train %>%
ggplot(aes(x = age, fill = survived)) +
geom_histogram(alpha = 0.3)
titanic_train %>%
ggplot(aes(x = age, fill = survived)) +
geom_density(alpha = 0.3)
titanic_train <- titanic_train %>%
mutate(family_size = sib_sp + parch + 1) %>%
mutate(family_size = case_when(
family_size == 1 ~ "Alone",
family_size >= 2 & family_size <= 3 ~ "Small",
family_size >= 4 & family_size <= 5 ~ "Medium",
family_size >= 6 ~ "Large"
))
titanic_train %>%
ggplot(aes(x = family_size, fill = survived)) +
geom_bar(position = "fill")
titanic_train <- titanic_train %>%
group_by(ticket) %>%
reframe(ticket_size = factor(n()),
across(.cols = everything()))
titanic_train %>%
ggplot(aes(x = ticket_size, fill = survived)) +
geom_bar(position = "fill")
titanic_train <- titanic_train %>%
mutate(title = (str_split(titanic_train$name, ",") %>%
str_extract("[A-Za-z]+\\.") %>%
str_remove("\\."))) %>%
mutate(title = fct_lump(title, n = 4))
titanic_train %>%
ggplot(aes(y = title, fill = survived)) + geom_bar(position = "fill")
titanic_train <- titanic_train %>%
select(-c(ticket, passenger_id, name, sib_sp,
parch, fare)) %>%
mutate(survived = factor(survived))
titanic_test <- titanic_test %>%
mutate(fare_binned = factor(ntile(fare,n=13))) %>%
mutate(family_size = sib_sp + parch + 1) %>%
mutate(family_size = case_when(
family_size == 1 ~ "Alone",
family_size >= 2 & family_size <= 3 ~ "Small",
family_size >= 4 & family_size <= 5 ~ "Medium",
family_size >= 6 ~ "Large"
)) %>%
group_by(ticket) %>%
reframe(ticket_size = factor(n()),
across(.cols = everything())) %>%
mutate(title = (str_split(titanic_test$name, ",") %>%
str_extract("[A-Za-z]+\\.") %>%
str_remove("\\."))) %>%
mutate(title = fct_lump(title, n = 4)) %>%
select(-c(ticket, passenger_id, name, sib_sp,
parch, fare))
titanic_recipe <- recipe(survived ~ ., titanic_train) %>%
step_dummy(all_nominal_predictors())
prep(titanic_recipe) %>% bake(titanic_train)
log_reg <- logistic_reg() %>%
set_engine("glm") %>%
set_mode("classification")
log_wkflow <- workflow() %>%
add_model(log_reg) %>%
add_recipe(titanic_recipe)
log_fit <- fit(log_wkflow, titanic_train)
log_auc <- augment(log_fit, new_data = titanic_train) %>%
roc_auc(survived, .pred_No)
augment(log_fit, new_data = titanic_test) %>%
roc_auc(survived, .pred_Yes)
titanic_test <- titanic_test %>%
mutate(fare_binned = factor(ntile(fare,n=13))) %>%
mutate(family_size = sib_sp + parch + 1) %>%
mutate(family_size = case_when(
family_size == 1 ~ "Alone",
family_size >= 2 & family_size <= 3 ~ "Small",
family_size >= 4 & family_size <= 5 ~ "Medium",
family_size >= 6 ~ "Large"
)) %>%
group_by(ticket) %>%
reframe(ticket_size = factor(n()),
across(.cols = everything())) %>%
mutate(title = (str_split(titanic_test$name, ",") %>%
str_extract("[A-Za-z]+\\.") %>%
str_remove("\\."))) %>%
mutate(title = fct_lump(title, n = 4)) %>%
select(-c(ticket, passenger_id, name, sib_sp,
parch, fare)) %>%
mutate(survived = factor(survived))
library(tidyverse)
library(corrplot)
library(tidymodels)
titanic <- read_csv("data/titanic.csv")
dim(titanic)
head(titanic)
reticulate::repl_python()
library(naniar)
vis_miss(titanic)
titanic$embarked %>% is.na() %>%
mean()
reticulate::repl_python()
titanic %>%
select_if(is.numeric) %>%
cor(use = "pairwise.complete.obs") %>%
corrplot(type = "lower", method = "number")
titanic <- titanic %>%
group_by(pclass, sex) %>%
reframe(age_median = median(age, na.rm = T),
across(.cols = everything())) %>%
mutate(age = case_when(
is.na(age) ~ age_median,
.default = age
)) %>%
select(-age_median)
titanic %>%
filter(is.na(embarked))
titanic <- titanic %>%
mutate(embarked = case_when(
is.na(embarked) ~ "S",
.default = embarked
))
titanic %>%
filter(is.na(cabin))
titanic <- titanic %>%
mutate(deck = case_when(
!is.na(cabin) ~ str_extract(cabin, "([A-Z]+)"),
is.na(cabin) ~ "M",
.default = NULL)) %>%
select(deck, everything())
titanic %>%
ggplot(aes(x = deck, fill = factor(pclass))) +
geom_bar(position = "fill")
titanic %>%
group_by(deck) %>%
count()
titanic <- titanic %>%
mutate(deck = case_when(
deck == "T" ~ "ABC",
deck == "A" | deck == "B" | deck == "C" ~ "ABC",
deck == "D" | deck == "E" ~ "DE",
deck == "F" | deck == "G" ~ "FG",
.default = deck)) %>%
select(-cabin)
titanic %>%
group_by(deck) %>%
count()
vis_miss(titanic)
titanic$embarked %>% is.na() %>%
mean()
titanic_split <- initial_split(titanic,
prop = 0.80,
strata = survived)
titanic_train <- training(titanic_split)
titanic_test <- testing(titanic_split)
reticulate::repl_python()
titanic_train %>%
ggplot(aes(x = fare, fill = survived)) +
geom_histogram(alpha = 0.3)
titanic_train %>%
ggplot(aes(x = fare, fill = survived)) +
geom_density(alpha = 0.3)
titanic_train <- titanic_train %>%
mutate(fare_binned = factor(ntile(fare,n=13)))
titanic_train %>%
ggplot(aes(x = fare_binned, fill = survived)) +
geom_bar(position = "fill")
titanic_train %>%
ggplot(aes(x = age, fill = survived)) +
geom_histogram(alpha = 0.3)
titanic_train %>%
ggplot(aes(x = age, fill = survived)) +
geom_density(alpha = 0.3)
titanic_train <- titanic_train %>%
mutate(family_size = sib_sp + parch + 1) %>%
mutate(family_size = case_when(
family_size == 1 ~ "Alone",
family_size >= 2 & family_size <= 3 ~ "Small",
family_size >= 4 & family_size <= 5 ~ "Medium",
family_size >= 6 ~ "Large"
))
titanic_train %>%
ggplot(aes(x = family_size, fill = survived)) +
geom_bar(position = "fill")
titanic_train <- titanic_train %>%
group_by(ticket) %>%
reframe(ticket_size = factor(n()),
across(.cols = everything()))
titanic_train %>%
ggplot(aes(x = ticket_size, fill = survived)) +
geom_bar(position = "fill")
titanic_train <- titanic_train %>%
mutate(title = (str_split(titanic_train$name, ",") %>%
str_extract("[A-Za-z]+\\.") %>%
str_remove("\\."))) %>%
mutate(title = fct_lump(title, n = 4))
titanic_train %>%
ggplot(aes(y = title, fill = survived)) + geom_bar(position = "fill")
titanic_train <- titanic_train %>%
select(-c(ticket, passenger_id, name, sib_sp,
parch, fare)) %>%
mutate(survived = factor(survived))
titanic_test <- titanic_test %>%
mutate(fare_binned = factor(ntile(fare,n=13))) %>%
mutate(family_size = sib_sp + parch + 1) %>%
mutate(family_size = case_when(
family_size == 1 ~ "Alone",
family_size >= 2 & family_size <= 3 ~ "Small",
family_size >= 4 & family_size <= 5 ~ "Medium",
family_size >= 6 ~ "Large"
)) %>%
group_by(ticket) %>%
reframe(ticket_size = factor(n()),
across(.cols = everything())) %>%
mutate(title = (str_split(titanic_test$name, ",") %>%
str_extract("[A-Za-z]+\\.") %>%
str_remove("\\."))) %>%
mutate(title = fct_lump(title, n = 4)) %>%
select(-c(ticket, passenger_id, name, sib_sp,
parch, fare)) %>%
mutate(survived = factor(survived))
titanic_recipe <- recipe(survived ~ ., titanic_train) %>%
step_dummy(all_nominal_predictors())
prep(titanic_recipe) %>% bake(titanic_train)
log_reg <- logistic_reg() %>%
set_engine("glm") %>%
set_mode("classification")
log_wkflow <- workflow() %>%
add_model(log_reg) %>%
add_recipe(titanic_recipe)
log_fit <- fit(log_wkflow, titanic_train)
log_auc <- augment(log_fit, new_data = titanic_train) %>%
roc_auc(survived, .pred_No)
augment(log_fit, new_data = titanic_test) %>%
roc_auc(survived, .pred_Yes)
augment(log_fit, new_data = titanic_test) %>%
roc_auc(survived, .pred_No)
library(tidyverse)
library(corrplot)
library(tidymodels)
titanic <- read_csv("data/titanic.csv")
dim(titanic)
head(titanic)
reticulate::repl_python()
library(naniar)
vis_miss(titanic)
titanic$embarked %>% is.na() %>%
mean()
reticulate::repl_python()
titanic %>%
select_if(is.numeric) %>%
cor(use = "pairwise.complete.obs") %>%
corrplot(type = "lower", method = "number")
titanic <- titanic %>%
group_by(pclass, sex) %>%
reframe(age_median = median(age, na.rm = T),
across(.cols = everything())) %>%
mutate(age = case_when(
is.na(age) ~ age_median,
.default = age
)) %>%
select(-age_median)
reticulate::repl_python()
library(tidyverse)
library(corrplot)
library(tidymodels)
titanic <- read_csv("data/titanic.csv")
dim(titanic)
head(titanic)
reticulate::repl_python()
library(naniar)
vis_miss(titanic)
titanic$embarked %>% is.na() %>%
mean()
reticulate::repl_python()
titanic %>%
select_if(is.numeric) %>%
cor(use = "pairwise.complete.obs") %>%
corrplot(type = "lower", method = "number")
titanic <- titanic %>%
group_by(pclass, sex) %>%
reframe(age_median = median(age, na.rm = T),
across(.cols = everything())) %>%
mutate(age = case_when(
is.na(age) ~ age_median,
.default = age
)) %>%
select(-age_median)
reticulate::repl_python()
titanic %>%
filter(is.na(embarked))
titanic <- titanic %>%
mutate(embarked = case_when(
is.na(embarked) ~ "S",
.default = embarked
))
reticulate::repl_python()
titanic %>%
filter(is.na(cabin))
titanic <- titanic %>%
mutate(deck = case_when(
!is.na(cabin) ~ str_extract(cabin, "([A-Z]+)"),
is.na(cabin) ~ "M",
.default = NULL)) %>%
select(deck, everything())
reticulate::repl_python()
titanic %>%
ggplot(aes(x = deck, fill = factor(pclass))) +
geom_bar(position = "fill")
reticulate::repl_python()
titanic %>%
group_by(deck) %>%
count()
titanic <- titanic %>%
mutate(deck = case_when(
deck == "T" ~ "ABC",
deck == "A" | deck == "B" | deck == "C" ~ "ABC",
deck == "D" | deck == "E" ~ "DE",
deck == "F" | deck == "G" ~ "FG",
.default = deck)) %>%
select(-cabin)
titanic %>%
group_by(deck) %>%
count()
reticulate::repl_python()
vis_miss(titanic)
titanic$embarked %>% is.na() %>%
mean()
reticulate::repl_python()
titanic_split <- initial_split(titanic,
prop = 0.80,
strata = survived)
titanic_train <- training(titanic_split)
titanic_test <- testing(titanic_split)
reticulate::repl_python()
titanic_train %>%
ggplot(aes(x = fare, fill = survived)) +
geom_histogram(alpha = 0.3)
titanic_train %>%
ggplot(aes(x = fare, fill = survived)) +
geom_density(alpha = 0.3)
reticulate::repl_python()
titanic_train <- titanic_train %>%
mutate(fare_binned = factor(ntile(fare,n=13)))
titanic_train %>%
ggplot(aes(x = fare_binned, fill = survived)) +
geom_bar(position = "fill")
reticulate::repl_python()
titanic_train %>%
ggplot(aes(x = age, fill = survived)) +
geom_histogram(alpha = 0.3)
titanic_train %>%
ggplot(aes(x = age, fill = survived)) +
geom_density(alpha = 0.3)
reticulate::repl_python()
titanic_train <- titanic_train %>%
mutate(family_size = sib_sp + parch + 1) %>%
mutate(family_size = case_when(
family_size == 1 ~ "Alone",
family_size >= 2 & family_size <= 3 ~ "Small",
family_size >= 4 & family_size <= 5 ~ "Medium",
family_size >= 6 ~ "Large"
))
titanic_train %>%
ggplot(aes(x = family_size, fill = survived)) +
geom_bar(position = "fill")
reticulate::repl_python()
titanic_recipe <- recipe(survived ~ .,
data = titanic_train) %>%
step_dummy(all_nominal_predictors(), one_hot = TRUE)
prep(titanic_recipe) %>%
bake(titanic_train)
titanic_train <- titanic_train %>%
select(-c(ticket, passenger_id, name, sib_sp,
parch, fare)) %>%
mutate(survived = factor(survived))
titanic_recipe <- recipe(survived ~ .,
data = titanic_train) %>%
step_dummy(all_nominal_predictors(), one_hot = TRUE)
prep(titanic_recipe) %>%
bake(titanic_train)
prep(titanic_recipe) %>%
bake(titanic_test)
titanic_test <- titanic_test %>%
mutate(fare_binned = factor(ntile(fare,n=13))) %>%
mutate(family_size = sib_sp + parch + 1) %>%
mutate(family_size = case_when(
family_size == 1 ~ "Alone",
family_size >= 2 & family_size <= 3 ~ "Small",
family_size >= 4 & family_size <= 5 ~ "Medium",
family_size >= 6 ~ "Large"
)) %>%
group_by(ticket) %>%
reframe(ticket_size = factor(n()),
across(.cols = everything())) %>%
mutate(title = (str_split(titanic_test$name, ",") %>%
str_extract("[A-Za-z]+\\.") %>%
str_remove("\\."))) %>%
mutate(title = fct_lump(title, n = 4)) %>%
select(-c(ticket, passenger_id, name, sib_sp,
parch, fare))
prep(titanic_recipe) %>%
bake(titanic_test)
library(janitor)
gaming <- read_csv("data/Updated_Gaming_Survey_Responses.csv") %>%
clean_names()
gaming
vis_miss(gaming)
vis_miss(gaming)
vis_miss(gaming)
gaming
gaming %>% View()
reticulate::repl_python()
titanic_train <- titanic_train %>%
group_by(ticket) %>%
reframe(ticket_size = factor(n()),
across(.cols = everything()))
reticulate::repl_python()
load(file = "data/okcupid.rda")
okcupid %>% head()
okcupid$id <- seq.int(nrow(okcupid))
okcupid <- okcupid %>%
select(id, essay9, status) %>%
mutate(status = case_when(
status == "available" ~ "single",
status == "seeing someone" ~ "taken",
status == "married" ~ "taken",
status == "single" ~ "single",
.default = status
)) %>%
drop_na()
okcupid <- okcupid[1:3000,]
okcupid$essay9 <- str_replace_all(okcupid$essay9, pattern = "<.*?>", " ")
# removing "\n", replacing with a space
okcupid$essay9 <- str_replace_all(okcupid$essay9, pattern = "\n", " ")
# removing "&amp;" and "&gt;"
okcupid$essay9 <- str_replace_all(okcupid$essay9, pattern = "&amp;", " ")
okcupid$essay9 <- str_replace_all(okcupid$essay9, pattern = "&gt;", " ")
remove <- c('\n',
'[[:punct:]]',
'nbsp',
'[[:digit:]]',
'[[:symbol:]]',
'^br$',
'href',
'ilink') %>%
paste(collapse = '|')
# removing any other weird characters,
# any backslashes, adding space before capital
# letters and removing extra whitespace,
# replacing capital letters with lowercase letters
okcupid$essay9 <- okcupid$essay9 %>%
str_remove_all('\'') %>%
str_replace_all(remove, ' ') %>%
str_replace_all("([a-z])([A-Z])", "\\1 \\2") %>%
tolower() %>%
str_replace_all("\\s+", " ")
reticulate::repl_python()
